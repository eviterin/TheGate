/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SimpleStorage, SimpleStorageInterface } from "../SimpleStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "DataStored",
    type: "event",
  },
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610775806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634ed3885e146100465780636d4ce63c146100625780638da5cb5b14610080575b600080fd5b610060600480360381019061005b9190610311565b61009e565b005b61006a6100ff565b60405161007791906103d9565b60405180910390f35b610088610191565b604051610095919061043c565b60405180910390f35b80600090816100ad919061066d565b503373ffffffffffffffffffffffffffffffffffffffff167f4b33dafb50dac5530c30aca4e4069fd67a18220888b874b8519558d1769d49a1826040516100f491906103d9565b60405180910390a250565b60606000805461010e90610486565b80601f016020809104026020016040519081016040528092919081815260200182805461013a90610486565b80156101875780601f1061015c57610100808354040283529160200191610187565b820191906000526020600020905b81548152906001019060200180831161016a57829003601f168201915b5050505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61021e826101d5565b810181811067ffffffffffffffff8211171561023d5761023c6101e6565b5b80604052505050565b60006102506101b7565b905061025c8282610215565b919050565b600067ffffffffffffffff82111561027c5761027b6101e6565b5b610285826101d5565b9050602081019050919050565b82818337600083830152505050565b60006102b46102af84610261565b610246565b9050828152602081018484840111156102d0576102cf6101d0565b5b6102db848285610292565b509392505050565b600082601f8301126102f8576102f76101cb565b5b81356103088482602086016102a1565b91505092915050565b600060208284031215610327576103266101c1565b5b600082013567ffffffffffffffff811115610345576103446101c6565b5b610351848285016102e3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610394578082015181840152602081019050610379565b60008484015250505050565b60006103ab8261035a565b6103b58185610365565b93506103c5818560208601610376565b6103ce816101d5565b840191505092915050565b600060208201905081810360008301526103f381846103a0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610426826103fb565b9050919050565b6104368161041b565b82525050565b6000602082019050610451600083018461042d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061049e57607f821691505b6020821081036104b1576104b0610457565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104dc565b61052386836104dc565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061056a6105656105608461053b565b610545565b61053b565b9050919050565b6000819050919050565b6105848361054f565b61059861059082610571565b8484546104e9565b825550505050565b600090565b6105ad6105a0565b6105b881848461057b565b505050565b5b818110156105dc576105d16000826105a5565b6001810190506105be565b5050565b601f821115610621576105f2816104b7565b6105fb846104cc565b8101602085101561060a578190505b61061e610616856104cc565b8301826105bd565b50505b505050565b600082821c905092915050565b600061064460001984600802610626565b1980831691505092915050565b600061065d8383610633565b9150826002028217905092915050565b6106768261035a565b67ffffffffffffffff81111561068f5761068e6101e6565b5b6106998254610486565b6106a48282856105e0565b600060209050601f8311600181146106d757600084156106c5578287015190505b6106cf8582610651565b865550610737565b601f1984166106e5866104b7565b60005b8281101561070d578489015182556001820191506020850194506020810190506106e8565b8683101561072a5784890151610726601f891682610633565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220460cc0d62e9c4b5ef784b83d95c7befebe392648ebe8a1e2d0a781f8494a6ead64736f6c634300081c0033";

type SimpleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage__factory extends ContractFactory {
  constructor(...args: SimpleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleStorage__factory {
    return super.connect(runner) as SimpleStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleStorage {
    return new Contract(address, _abi, runner) as unknown as SimpleStorage;
  }
}
